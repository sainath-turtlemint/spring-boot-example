plugins {
	id 'org.springframework.boot' version '2.6.8'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'org.sonarqube' version '2.7.1'
	id 'jacoco'
	id 'java'
}

group = 'com.turtlemint.arch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "http://nexus.turtlemint.com/repository/maven-public/"
		allowInsecureProtocol true
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-streams'

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'
	implementation group: 'io.netty', name: 'netty-all', version: '4.1.75.Final'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.withType(Test) {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

sonarqube {
	properties {
		property 'sonar.java.binaries', ${buildDir}/classes
	}
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}
